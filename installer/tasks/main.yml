---
# tasks file for installer


- name: downlad the cyberark installation zip files 
  win_shell: Copy-S3Object -BucketName tmk-wcl01 -key Windows-Rls-v10.5.zip -LocalFile C:\Users\Administrator\Windows-Rls-v10.5.zip
  tags: ['windows']
  
- name: downlad the cyberark installation zip files 
  win_shell: Copy-S3Object -BucketName tmk-wcl01 -key linuxSelinux.txt -LocalFile C:\Users\Administrator\linuxSelinux.txt


- name: Download Microsoft Visual 2013 64bit to specified path
  win_get_url:
    url: http://download.microsoft.com/download/0/5/6/056dcda9-d667-4e27-8001-8a0c6971d6b1/vcredist_x86.exe
    dest: C:\Users\Administrator\
  tags: ['windows']
    
- name: Download Microsoft Visual 2013 64bit to specified path
  win_get_url:
    url: http://download.microsoft.com/download/0/5/6/056dcda9-d667-4e27-8001-8a0c6971d6b1/vcredist_x64.exe
    dest: C:\Users\Administrator\
  tags: ['windows-installer']

- name: Install visual c++ 2013 64 bit
  win_package:
    path: C:\Users\Administrator\vcredist_x64.exe
    creates_path: C:\Program Files\Microsoft Visual C++ 2013\vcredist_x86.exe
    state: present
    arguments:
    - /install
    - /passive
    - /norestart
  tags: ['windows']
    
    
- name: Install visual c++ 2013 32 bit
  win_package:
    path: C:\Users\Administrator\vcredist_x86.exe
    creates_path: C:\Program Files\Microsoft Visual C++ 2013\vcredist_x64.exe
    state: present
    arguments:
    - /install
    - /passive
    - /norestart
  tags: ['windows']

#- name: Unzip a the cyberark zip file
#  win_unzip:
#    src: C:\Users\Administrator\Windows-Rls-v10.5.zip
#    dest: C:\Users\Administrator\Windows-Rls-v10.5

- name: Silent install of cyberark agent
  win_shell: C:\Users\Administrator\Windows-Rls-v10.5\Windows\setup.exe /S /f1"C:\Users\Administrator\Windows-Rls-v10.5\Windows\silent.iss" /v n
  tags: ['windows']

#- name: Install cyberark agent
#  win_package:
#    path: C:\Users\Administrator\Windows-Rls-v10.5\Windows\setup.exe
#    creates_path: C:\Program Files\CyberArk\cyberark.exe
#    state: present

#- name: Install trend micro av notifier 32 bit
#  win_shell: |
#    [Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}
#    $env:LogPath = "$env:appdata\Trend Micro\Deep Security Agent\installer"
#    New-Item -path $env:LogPath -type directory
#    Start-Transcript -path "$env:LogPath\dsa_deploy.log" -append
#    echo "$(Get-Date -format T) - DSA download started"
#    (New-Object System.Net.WebClient).DownloadFile("https://10.200.12.43:4119/software/agent/Windows/x86_64/", "$env:temp\agent.msi")
#    echo "$(Get-Date -format T) - Downloaded File Size:" (Get-Item "$env:temp\agent.msi").length
#    echo "$(Get-Date -format T) - DSA install started"
#    echo "$(Get-Date -format T) - Installer Exit Code:" (Start-Process -FilePath msiexec -ArgumentList "/i $env:temp\agent.msi /qn ADDLOCAL=ALL /l*v `"$env:LogPath\dsa_install.log`"" -Wait -PassThru).ExitCode 
#    echo "$(Get-Date -format T) - DSA activation started"
#    Start-Sleep -s 50
#    & $Env:ProgramFiles"\Trend Micro\Deep Security Agent\dsa_control" -r
#    & $Env:ProgramFiles"\Trend Micro\Deep Security Agent\dsa_control" -a dsm://10.200.12.43:4120/ "policyid:20" "relaygroupid:1"
#    Stop-Transcript
#    echo "$(Get-Date -format T) - DSA Deployment Finished"

- name: check if lsb_release is installed 
  shell : lsb_release â€“d
  register: lsb
  tags: ['linux']
  
- debug: 
   msg="{{ lsb.stdout }}"
  tags: ['linux']

